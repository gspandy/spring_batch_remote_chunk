<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-file="http://www.springframework.org/schema/integration/file"
	xmlns:int-mail="http://www.springframework.org/schema/integration/mail"
	xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/integration/mail http://www.springframework.org/schema/integration/mail/spring-integration-mail.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
		http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<int:poller default="true" fixed-rate="10000"/>

	<int:channel id="databaseOutputChannel"/>

	<int:channel id="requests"/>

	<int:channel id="statuses">
		<int:queue capacity="1"/>
	</int:channel>
	<!-- pollDataFile获取数据，然后把消息通过transformer转换成jobRequest然后通过jobLaunch启动job，job启动之后chunk会根据commit-interval
	的数量来决定chunk reader的读取的次数,无论chunk reader读取多少次，chunk writer都只会执行一次，如果这期间抛出异常则整个chunk的事务进行回滚
	在RSP中batch controller负责chunk reader的读取工作，batch worker负责chunk writer的执行工作，他们之间原本通过jms进行通信，现在改为jdbc的方式进行
	通信。-->
	<!-- SI配置的JobExecutionListener会监听job的执行情况，并根据job的执行情况对job做不同的处理（发送email或者重启job或者返回完成的消息） -->
	<!-- 问题：
	1.我们替代MQ是为了使用jdbc channel的方式读取数据裤信息来触发job launcher执行job,
	还是为了实现chunk之间reader和writer的通信工作达到传递业务数据的目的。
	 -->
	<int-file:inbound-channel-adapter id="pollDataFile"
		directory="classpath:/data/paymentImport"
		channel="databaseOutputChannel">
		<int:poller fixed-rate="1000" max-messages-per-poll="1" task-executor="poor">
		</int:poller>	
	</int-file:inbound-channel-adapter>
	
	<task:executor id="poor" keep-alive="120" queue-capacity="10" pool-size="10"/>

	<int:transformer id="prepareJobLaunchRequest"
		input-channel="databaseOutputChannel" output-channel="requests">
		<bean class="org.springframework.batch.integration.samples.payments.FileMessageToJobRequest">
			<property name="job" ref="importPayments"/>
			<property name="fileParameterName" value="input.file.name"/>
		</bean>
	</int:transformer>

	<int:service-activator method="launch" input-channel="requests"
		output-channel="statuses" id="run">
		<bean class="org.springframework.batch.integration.launch.JobLaunchingMessageHandler">
			<constructor-arg ref="jobLauncher"/>
		</bean>
	</int:service-activator>

	<int:gateway id="notificationExecutionsListener"
		service-interface="org.springframework.batch.core.JobExecutionListener"
		default-request-channel="jobExecutions"/>

	<int:channel id="jobExecutions"/>

	<int:router id="executionsRouter" input-channel="jobExecutions">
		<bean class="org.springframework.batch.integration.samples.payments.JobExecutionsRouter"/>
	</int:router>

	<int:channel id="jobRestarts" />

	<int:chain input-channel="jobRestarts">
		<int:delayer id="wait5sec" default-delay="5000"/>
		<int:service-activator>
			<bean class="org.springframework.batch.integration.samples.payments.JobRestart"/>
		</int:service-activator>
	</int:chain>

	<int:channel id="notifiableExecutions"/>

	<int:transformer id="mailBodyTransformer"
		input-channel="notifiableExecutions"
		output-channel="mailNotifications">
		<bean class="org.springframework.batch.integration.samples.payments.ExecutionsToMailTransformer"/>
	</int:transformer>

	<int:channel id="mailNotifications"/>

	<int-mail:outbound-channel-adapter id="notificationsSender"
					channel="mailNotifications" mail-sender="mailSender"/>

	<bean id="mailSender" class="org.springframework.batch.integration.samples.payments.StubJavaMailSender">
		<constructor-arg>
			<bean class="javax.mail.internet.MimeMessage">
				<constructor-arg type="javax.mail.Session"><null/></constructor-arg>
			</bean>
		</constructor-arg>
	</bean>

	<int:channel id="chunkExecutions"/>

	<int-stream:stdout-channel-adapter id="printToConsole" channel="chunkExecutions" auto-startup="true"/>

	<int:channel id="completeApplication">
		<int:queue/>
	</int:channel>

	<!-- REMOTE CHUNKING -->

	<int:channel id="chunks"/>
	<int:channel id="chunksReplies">
		  <int:queue/>
	</int:channel>

	<int:service-activator input-channel="chunks" output-channel="chunksReplies" ref="chunkHandler" />

</beans>
